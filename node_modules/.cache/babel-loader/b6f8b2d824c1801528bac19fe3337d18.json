{"ast":null,"code":"var _jsxFileName = \"/Users/thanhvan/REACTJS/project-food/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const isEmpty = value => value.trim() === '';\n\n  const isFiveChars = value => value.trim().length !== 5;\n\n  const confirmHanler = e => {\n    e.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = !isEmpty(enteredPostalCode);\n    const enteredCityIsValid = !isFiveChars(enteredCity);\n    setFormInputsValidity({\n      name: enteredCityIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n\n    if (formIsValid) {\n      return;\n    }\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalControlClasses = `${classes.control} ${formInputsValidity.postal ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHanler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: post,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: props.onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"6UQ5h5MV6E6ShnzOPVhW0wZPysc=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/thanhvan/REACTJS/project-food/src/components/Cart/Checkout.js"],"names":["React","classes","useRef","useState","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","isEmpty","value","trim","isFiveChars","length","confirmHanler","e","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","formIsValid","nameControlClasses","control","invalid","streetControlClasses","postalControlClasses","postal","cityControlClasses","form","post","onCancel"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CJ,QAAQ,CAAC;AACzDK,IAAAA,IAAI,EAAE,IADmD;AAEzDC,IAAAA,MAAM,EAAE,IAFiD;AAGzDC,IAAAA,IAAI,EAAE,IAHmD;AAIzDC,IAAAA,UAAU,EAAG;AAJ4C,GAAD,CAA5D;AAOA,QAAMC,YAAY,GAAGV,MAAM,EAA3B;AACA,QAAMW,cAAc,GAAIX,MAAM,EAA9B;AACA,QAAMY,cAAc,GAAGZ,MAAM,EAA7B;AACA,QAAMa,YAAY,GAAGb,MAAM,EAA3B;;AAEA,QAAMc,OAAO,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,OAAgB,EAAzC;;AACA,QAAMC,WAAW,GAAGF,KAAK,IAAIA,KAAK,CAACC,IAAN,GAAaE,MAAb,KAAuB,CAApD;;AAKA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAGzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,WAAW,GAAGZ,YAAY,CAACa,OAAb,CAAqBR,KAAzC;AACA,UAAMS,aAAa,GAAGb,cAAc,CAACY,OAAf,CAAuBR,KAA7C;AACA,UAAMU,iBAAiB,GAAGb,cAAc,CAACW,OAAf,CAAuBR,KAAjD;AACA,UAAMW,WAAW,GAAGb,YAAY,CAACU,OAAb,CAAqBR,KAAzC;AAGA,UAAMY,kBAAkB,GAAG,CAACb,OAAO,CAACQ,WAAD,CAAnC;AACA,UAAMM,oBAAoB,GAAG,CAACd,OAAO,CAACU,aAAD,CAArC;AACA,UAAMK,wBAAwB,GAAG,CAACf,OAAO,CAACW,iBAAD,CAAzC;AACA,UAAMK,kBAAkB,GAAG,CAAEb,WAAW,CAACS,WAAD,CAAxC;AAEArB,IAAAA,qBAAqB,CAAC;AAClBC,MAAAA,IAAI,EAAEwB,kBADY;AAElBvB,MAAAA,MAAM,EAAEqB,oBAFU;AAGlBpB,MAAAA,IAAI,EAAEsB,kBAHY;AAIlBrB,MAAAA,UAAU,EAAEoB;AAJM,KAAD,CAArB;AAUA,UAAME,WAAW,GACjBJ,kBAAkB,IAClBC,oBADA,IAEAC,wBAFA,IAGAC,kBAJA;;AAKA,QAAGC,WAAH,EAAe;AACX;AACH;AAMJ,GAtCD;;AAuCA,QAAMC,kBAAkB,GAAI,GAAEjC,OAAO,CAACkC,OAAQ,IAAG7B,kBAAkB,CAACE,IAAnB,GAA0B,EAA1B,GAA8BP,OAAO,CAACmC,OAAQ,EAA/F;AACA,QAAMC,oBAAoB,GAAI,GAAEpC,OAAO,CAACkC,OAAQ,IAAG7B,kBAAkB,CAACG,MAAnB,GAA4B,EAA5B,GAAgCR,OAAO,CAACmC,OAAQ,EAAnG;AACA,QAAME,oBAAoB,GAAI,GAAErC,OAAO,CAACkC,OAAQ,IAAG7B,kBAAkB,CAACiC,MAAnB,GAA4B,EAA5B,GAAgCtC,OAAO,CAACmC,OAAQ,EAAnG;AACA,QAAMI,kBAAkB,GAAI,GAAEvC,OAAO,CAACkC,OAAQ,IAAG7B,kBAAkB,CAACI,IAAnB,GAA0B,EAA1B,GAA8BT,OAAO,CAACmC,OAAQ,EAA/F;AAEA,sBACI;AAAM,IAAA,SAAS,EAAEnC,OAAO,CAACwC,IAAzB;AAA+B,IAAA,QAAQ,EAAEpB,aAAzC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEa,kBAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,GAAG,EAAEtB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,CAACN,kBAAkB,CAACE,IAApB,iBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHjC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAE6B,oBAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,GAAG,EAAExB;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,CAACP,kBAAkB,CAACG,MAApB,iBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHnC;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAK,MAAA,SAAS,EAAEiC,IAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,GAAG,EAAE5B;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,CAACR,kBAAkB,CAACiC,MAApB,iBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAgBI;AAAK,MAAA,SAAS,EAAEtC,OAAO,CAACkC,OAAxB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,GAAG,EAAEpB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,CAACT,kBAAkB,CAACI,IAApB,iBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAqBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEL,KAAK,CAACsC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAzFD;;GAAMvC,Q;;KAAAA,Q;AA2FN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\n\n\nconst Checkout = (props) => {\n    const [formInputsValidity, setFormInputsValidity] = useState({\n        name: true, \n        street: true, \n        city: true, \n        postalCode : true, \n\n    })\n    const nameInputRef = useRef();\n    const streetInputRef  = useRef();\n    const postalInputRef = useRef();\n    const cityInputRef = useRef();\n\n    const isEmpty = value => value.trim() ==='';\n    const isFiveChars = value => value.trim().length !==5;\n\n\n\n\n    const confirmHanler = (e) => {\n\n\n        e.preventDefault();\n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostalCode = postalInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        \n        const enteredNameIsValid = !isEmpty(enteredName);\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\n        const enteredPostalCodeIsValid = !isEmpty(enteredPostalCode);\n        const enteredCityIsValid = ! isFiveChars(enteredCity);\n\n        setFormInputsValidity({ \n            name: enteredCityIsValid,\n            street: enteredStreetIsValid, \n            city: enteredCityIsValid, \n            postalCode: enteredPostalCodeIsValid, \n\n\n        });\n\n\n        const formIsValid =\n        enteredNameIsValid && \n        enteredStreetIsValid && \n        enteredPostalCodeIsValid && \n        enteredCityIsValid;\n        if(formIsValid){\n            return;\n        }\n\n\n\n\n\n    };\n    const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '': classes.invalid}`;\n    const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '': classes.invalid}`;\n    const postalControlClasses = `${classes.control} ${formInputsValidity.postal ? '': classes.invalid}`;\n    const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '': classes.invalid}`;\n\n    return (\n        <form className={classes.form} onSubmit={confirmHanler}>\n            <div className={nameControlClasses}>\n                <label htmlFor='name'>Your Name</label>\n                <input type='text' id='name' ref={nameInputRef}></input>\n                {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n            </div>\n            <div className={streetControlClasses}>\n                <label htmlFor='street'>Street</label>\n                <input type='text' id='street' ref={streetInputRef}></input>\n                {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n            </div>\n            <div className={post}>\n                <label htmlFor='postal'>Postal Code</label>\n                <input type='text' id='postal' ref={postalInputRef}></input>\n                {!formInputsValidity.postal && <p>Please enter a valid postal!</p>}\n            </div>\n            <div className={classes.control}>\n                <label htmlFor='city'>City</label>\n                <input type='text' id='city' ref={cityInputRef}></input>\n                {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n            </div>\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n            <button>Confirm</button>\n        </form>\n    )\n}\n\nexport default Checkout\n"]},"metadata":{},"sourceType":"module"}